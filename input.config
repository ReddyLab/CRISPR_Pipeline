includeConfig './configs/pipeline_input.config'
includeConfig './configs/dashboard.config'

process {
    // Default settings for all processes
    executor = 'local'
    errorStrategy = { task.attempt <= 3 ? 'retry' : 'terminate' }
    maxRetries = 3
    cpus = { 2 * task.attempt }
    memory = { 16.GB * task.attempt }
    time = { 30.min * task.attempt }

    withName: anndata_concat {
        container = 'docker://sjiang9/conda-docker:0.1'
    }

    withName: createGuideRef {
        container = 'docker://sjiang9/conda-docker:0.1'
    }

    withName: createHashingRef {
        container = 'docker://sjiang9/conda-docker:0.1'
    }

    withName: seqSpecCheck {
        container = 'docker://sjiang9/conda-docker:0.1'
    }

    withName: createDashboard_HASHING {
        container = 'docker://sjiang9/conda-docker:0.1'
    }

    withName: createDashboard {
        container = 'docker://sjiang9/conda-docker:0.1'
    }

    withName: CreateMuData_HASHING {
        container = 'docker://sjiang9/conda-docker:0.1'
    }

    withName: CreateMuData {
        container = 'docker://sjiang9/conda-docker:0.1'
    }
    
    withName: demultiplex {
        container = 'docker://sjiang9/conda-docker:0.1'
    }

    withName: doublets_scrub {
        container = 'docker://sjiang9/conda-docker:0.1'
    }

    withName: downloadReference {
        container = 'docker://sjiang9/conda-docker:0.1'
    }

    withName: filter_hashing {
        container = 'docker://sjiang9/conda-docker:0.1'
    }

    withName: guide_assignment_mudata {
        container = 'docker://sjiang9/conda-docker:0.1'
    }

    withName: hashing_concat {
        container = 'docker://sjiang9/conda-docker:0.1'
    }

    withName: inference_mudata {
        container = 'docker://sjiang9/conda-docker:0.1'
    }

    withName: mappingGuide {
        container = 'docker://sjiang9/conda-docker:0.1'
        cpus = { 4 * task.attempt }
        memory = { 64.GB * task.attempt }
        time = { 1.hour * task.attempt }
    }

    withName: mappingHashing {
        container = 'docker://sjiang9/conda-docker:0.1'
        cpus = { 4 * task.attempt }
        memory = { 64.GB * task.attempt }
        time = { 1.hour * task.attempt }
    }

    withName: mappingscRNA {
        container = 'docker://sjiang9/conda-docker:0.1'
        cpus = { 4 * task.attempt }
        memory = { 64.GB * task.attempt }
        time = { 1.hour * task.attempt }
    }

    withName: prepare_covariate {
        container = 'docker://sjiang9/conda-docker:0.1'
    }

    withName: prepare_guide_inference {
        container = 'docker://sjiang9/conda-docker:0.1'
    }

    withName: prepare_user_guide_inference {
        container = 'docker://sjiang9/conda-docker:0.1'
    }

    withName: prepare_all_guide_inference {
        container = 'docker://sjiang9/conda-docker:0.1'
    }

    withName: PreprocessAnnData {
        container = 'docker://sjiang9/conda-docker:0.1'
    }

    withName: seqSpecParser {
        container = 'docker://sjiang9/conda-docker:0.1'
    }

    withName: guide_assignment_cleanser {
        container = 'docker://sjiang9/cleanser:0.3'
        cpus = { 4 * task.attempt }
        memory = { 64.GB * task.attempt }
        time = { 1.hour * task.attempt }
    }

    withName: guide_assignment_sceptre {
        container = 'docker://igvf/sceptre-igvf:v0.2'
        cpus = { 4 * task.attempt }
        memory = { 64.GB * task.attempt }
        time = { 1.hour * task.attempt }
    }
    
    withName: inference_sceptre {
        container = 'docker://igvf/sceptre-igvf:v0.2'
        cpus = { 4 * task.attempt }
        memory = { 64.GB * task.attempt }
        time = { 1.hour * task.attempt }
    }

    withName: inference_perturbo {
        container = 'docker://pinellolab/perturbo-cuda:0.1'
        cpus = { 4 * task.attempt }
        memory = { 64.GB * task.attempt }
        time = { 1.hour * task.attempt }
    }

    withName: mergedResults {
        container = 'docker://sjiang9/conda-docker:0.1'
    }

    withName: evaluation_plot {
        container = 'docker://sjiang9/conda-docker:0.1'
    }

    withName: evaluation_undefined_plot {
        container = 'docker://sjiang9/conda-docker:0.1'
    }
}

singularity {
    enabled = true
    autoMounts = true 
    runOptions = '--nv'
}

tower {
    enabled = false
    accessToken = "${TOWER_ACCESS_TOKEN ?: ''}"
}

trace {
    enabled = true
    file = 'pipeline_trace.txt'
    overwrite = true
}